package:
  name: dask
  version: "0.12.0"

source:
  fn: dask-0.12.0.tar.gz
  url: https://pypi.python.org/packages/46/3e/d55cfe683faebe1464f182d4bacd36a496e5a53aa857794778d2c7a012dd/dask-0.12.0.tar.gz
  md5: c1660845ae12449837d9bce9758933a9
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - dask = dask:main
    #
    # Would create an entry point called dask that calls dask.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - dask
    - dask.array
    - dask.array.tests
    - dask.bag
    - dask.bag.tests
    - dask.bytes
    - dask.bytes.tests
    - dask.dataframe
    - dask.dataframe.io
    - dask.dataframe.io.tests
    - dask.dataframe.tests
    - dask.dataframe.tseries
    - dask.dataframe.tseries.tests
    - dask.diagnostics
    - dask.diagnostics.tests
    - dask.store
    - dask.store.tests
    - dask.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/dask/dask/
  license: BSD
  summary: 'Minimal task scheduling abstraction'
  license_family: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
